name: CI - Build, Test & Security

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Setup local.properties
        run: |
          echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY || 'dummy_key_for_ci' }}" > local.properties
      
      - name: Build with Gradle
        run: ./gradlew build --stacktrace
      
      - name: Run Unit Tests
        run: ./gradlew test --stacktrace
      
      - name: Generate Test Coverage Report
        run: ./gradlew jacocoTestReport || echo "JaCoCo not configured, skipping coverage"
        continue-on-error: true
      
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            **/build/test-results/**/*.xml
            **/build/reports/tests/**
      
      - name: Upload Coverage Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            **/build/reports/jacoco/**
            **/build/reports/coverage/**
        continue-on-error: true

  instrumentation-tests:
    name: Instrumentation Tests (Android)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Setup local.properties
        run: |
          echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY || 'dummy_key_for_ci' }}" > local.properties
      
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      
      - name: Run Instrumentation Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          script: ./gradlew connectedAndroidTest --stacktrace
      
      - name: Upload Instrumentation Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: instrumentation-test-results
          path: |
            **/build/outputs/androidTest-results/**
            **/build/reports/androidTests/**

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
      actions: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Setup local.properties
        run: |
          echo "MAPS_API_KEY=dummy_key_for_ci" > local.properties
      
      - name: Build for CodeQL analysis
        run: ./gradlew assembleDebug --stacktrace
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:java"

  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Setup local.properties
        run: |
          echo "MAPS_API_KEY=dummy_key_for_ci" > local.properties
      
      - name: Run Dependency Check
        run: ./gradlew dependencyCheckAnalyze || echo "OWASP Dependency Check not configured"
        continue-on-error: true
      
      - name: Upload Dependency Check Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: build/reports/dependency-check-report.html
        continue-on-error: true

  lint:
    name: Lint Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Setup local.properties
        run: |
          echo "MAPS_API_KEY=dummy_key_for_ci" > local.properties
      
      - name: Run Android Lint
        run: ./gradlew lintDebug --stacktrace
      
      - name: Upload Lint Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-results
          path: |
            **/build/reports/lint-results-*.html
            **/build/reports/lint-results-*.xml
